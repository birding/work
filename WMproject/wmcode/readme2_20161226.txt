###generate patch###

diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/ OCTEON-SDK.wmpatch/bootloader/u-boot/ > board20161102_uboot.patch 
diff -purBN --no-dereference OCTEON-SDK.orig/executive/ OCTEON-SDK.wmpatch/executive/ > board20161102_executive.patch 


##source code####
mkdir OCTEON-SDK_WM
cd /home/sdk312/sdk312p7/OCTEON-SDK_WM/
rpm -ivh  --prefix=/home/sdk312/sdk312p7/OCTEON-SDK_WM/ --force /media/sf_F_DRIVE/SDK/SDK312/OCTEON-SDK-3.1.2-568.i386.rpm 
rpm -ivh  --prefix=/home/sdk312/sdk312p7/OCTEON-SDK_WM/ --force /media/sf_F_DRIVE/SDK/SDK312/OCTEON-LINUX-3.1.2-568.i386.rpm 

cd OCTEON-SDK/
patch -s -p1 < /home/sdk312/sdk312p7/sdk-3.1.2-patch_release7/sdk.patch 
patch -s -p1 < /home/sdk312/sdk312p7/sdk-3.1.2-patch_release7/linux.patch 
/home/sdk312/sdk312p7/sdk-3.1.2-patch_release7/octeon_copy_3_1_2_p7_files.sh /home/sdk312/sdk312p7/sdk-3.1.2-patch_release7/


patch -s -p1 < /media/sf_F_DRIVE/WM71/board20161102_uboot.patch 
patch -s -p1 < /media/sf_F_DRIVE/WM71/board20161102_executive.patch

mv OCTEON-SDK OCTEON-SDK.wmdebug


source env-setup OCTEON_CN71XX
cd bootloader/u-boot
make clean
make octeon_generic_cn70xx_spi_stage2_config
make
cp u-boot-octeon_generic_cn70xx_spi_stage2.bin ../  
   
make clean
make octeon_sff7000_config
make
cp u-boot-octeon_sff7000.bin ../

cd ../spi-boot/
make clean
make
cp spi-boot.bin ../
 


88E1512  -- RGMII   靠近电源下
serial console   靠近电源上，（亮灯）


setenv prompt WM7000#
setenv disable_pci 1
setenv ethact octrgmii0;
 dhcp;
setenv serverip 192.168.11.214

setenv ethact octrgmii0;setenv serverip 192.168.1.1;setenv ipaddr 192.168.1.2;

//offset 1MB
tftpboot 0 u-boot-octeon_sff7000.bin
sf probe; sf update $(fileaddr) 0x100000 $(filesize)

//offset 8KB
tftpboot 0 u-boot-octeon_generic_cn70xx_spi_stage2.bin
sf probe;sf update $(fileaddr) 0x2000 $(filesize)

//offset 0KB
tftpboot 0 spi-boot.bin
sf probe; sf update $(fileaddr) 0x0 $(filesize)



##NAND uboot##
ubi/ubifs


nand info
nand device 0
nand erase.chip

setenv mtdparts mtdparts=octeon_nand0:0x40000000@0x0(root)
mtdparts
ubi part root
ubi create root

WM7000# ubi part root
UBI: attaching mtd1 to ubi0
UBI: physical eraseblock size:   262144 bytes (256 KiB)
UBI: logical eraseblock size:    258048 bytes
UBI: smallest flash I/O unit:    4096
UBI: sub-page size:              1024
UBI: VID header offset:          1024 (aligned 1024)
UBI: data offset:                4096
UBI: empty MTD device detected
UBI: create volume table (copy #1)
UBI: create volume table (copy #2)
UBI: attached mtd1 to ubi0
UBI: MTD device name:            "mtd=0"
UBI: MTD device size:            1024 MiB
UBI: number of good PEBs:        4092
UBI: number of bad PEBs:         4
UBI: max. allowed volumes:       128
UBI: wear-leveling threshold:    4096
UBI: number of internal volumes: 1
UBI: number of user volumes:     0
UBI: available PEBs:             4048
UBI: total number of reserved PEBs: 44
UBI: number of PEBs reserved for bad PEB handling: 40
UBI: max/mean erase counter: 1/0

ext2load mmc 0 0xa0000000 rootfs.ubi
222953472
ubi write 0xa0000000 root $(filesize)

 Physical Erase Block (PEB)
 Logical Erase Block (LEB)
 
mkfs.ubifs -r rootfs  -m 4096 -e 258048 -c 4048 -o rootfs.ubi
-m, --min-io-size=SIZE       minimum I/O unit size，最小输入输出大小 
-c, --max-leb-cnt=COUNT    maximum logical erase block count最大逻辑可擦出块数目 
-e, --leb-size=SIZE        logical erase block size逻辑可擦出块大小 

-m最小输入输出大小为2KiB(2048bytes)，一般为页大小 
-e逻辑可擦除块大小为124KiB=(每块的页数-2)*页大小=（64-2）*2KiB=124KiB 
-c最多逻辑可擦除块数目为720(720*128KiB=90MiB),这个可根据ubi volume来设置，实际上是设置此卷的最大容量

setenv bootargs console=ttymxc1 ubi.mtd=0 ubi.mtd=1 init=/init 
setenv  bootargs console=ttyS2,115200n8 ubi.mtd=4 root=ubi0:rootfs
                  rootfstype=ubifs
             
             
                  
#####boot LINUX
make menuconfig ARCH=mips
(1)Device Drivers ---> <*> Memory Technology Device (MTD) support ---> <*> Enable UBI - Unsorted block images 
(2)File systems --->[*] Miscellaneous filesystems ---> <*> UBIFS file system support


/home/sdk312/sdk312p7/OCTEON-SDK/
source env-setup OCTEON_CN71XX
cd linux
make kernel-deb
cp kernel/linux/vmlinux.64 /media/sf_F_DRIVE/tftproot/vmlinux.64.sdk312p7.71.nand_fs
cd embedded_rootfs/
make ext2
cd tmp
mkfs.ubifs -r _home_sdk312_sdk312p7_OCTEON-SDK_linux_embedded_rootfs-rootfs/  -m 4096 -e 258048 -c 4048 -o rootfs.ubi
mv rootfs.ubi /media/sf_F_DRIVE/tftproot/


#######install mkfs.ubifs on CentOS Linux release 7.1.1503 (Core)###
yum install zlib-devel
yum install lzo-devel
wget ftp://ftp.infradead.org/pub/mtd-utils/mtd-utils-1.5.0.tar.bz2
tar xjvf mtd-utils-1.5.0.tar.bz2 
cd mtd-utils-1.5.0/
make
make install
[root@localhost mtd-utils-1.5.0]# mkfs.ubifs -V
mkfs.ubifs 1.5.0
#####
 
setenv ethact octrgmii0;setenv serverip 192.168.1.1;setenv ipaddr 192.168.1.2;

tftpboot 0 vmlinux.64.sdk312p7.71.nand;bootoctlinux 0 numcores=2 endbootargs octeon-nand.debug=-1;
tftpboot 0 vmlinux.64.sdk312p7.71.nand;bootoctlinux 0 numcores=2 endbootargs octeon-nand.wm=1;


~ # fdisk -l /dev/mtdblock0 

Disk /dev/mtdblock0: 4 MB, 4194304 bytes
255 heads, 63 sectors/track, 0 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

Disk /dev/mtdblock0 doesn't contain a valid partition table


NAND CS0 and CS2

CONFIG_CAVIUM_OCTEON_NAND

octeon-nand 1070001000000.nand-flash-interface: ONFI not supported for chip 2
octeon-nand 1070001000000.nand-flash-interface: Parameter header: 98 d3 91 26
octeon-nand 1070001000000.nand-flash-interface: Failed to scan NAND device
octeon-nand: probe of 1070001000000.nand-flash-interface failed with error -1
http://blog.csdn.net/maopig/article/details/8258118