diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/arch/mips/cpu/octeon/config.mk OCTEON-SDK.wm/bootloader/u-boot/arch/mips/cpu/octeon/config.mk
--- OCTEON-SDK.orig/bootloader/u-boot/arch/mips/cpu/octeon/config.mk	2015-11-21 09:47:22.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/arch/mips/cpu/octeon/config.mk	2017-02-20 20:56:22.092860465 +0800
@@ -34,6 +34,7 @@ PLATFORM_CPPFLAGS += $(MIPSFLAGS) -mabi=
 			-fearly-inlining \
 			-finline-small-functions -fmerge-all-constants \
 			-mtune=octeon2 -Os -Wdeclaration-after-statement \
+			-DWMBOARD \
 			-std=gnu90 -Wno-long-long -mno-check-zero-division
 
 PLATFORM_LDFLAGS +=
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/arch/mips/lib/board_octeon.c OCTEON-SDK.wm/bootloader/u-boot/arch/mips/lib/board_octeon.c
--- OCTEON-SDK.orig/bootloader/u-boot/arch/mips/lib/board_octeon.c	2017-02-20 20:52:16.630567852 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/arch/mips/lib/board_octeon.c	2017-02-20 20:56:22.094860467 +0800
@@ -1651,9 +1651,11 @@ void board_init_r(gd_t * id, u64 dest_ad
 		nand_init();	/* go init the NAND (do this after flash init...) */
 		WATCHDOG_RESET();
 		debug("Relocating environment\n");
+#ifndef WMBOARD		
 		/* Relocate environment function pointers */
 		env_relocate();
 		debug("Environment relocated\n");
+#endif		
 	}
 #endif
 
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/board/octeon/common/octeon_board_common.c OCTEON-SDK.wm/bootloader/u-boot/board/octeon/common/octeon_board_common.c
--- OCTEON-SDK.orig/bootloader/u-boot/board/octeon/common/octeon_board_common.c	2017-02-20 20:52:16.631567853 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/board/octeon/common/octeon_board_common.c	2017-02-20 20:56:22.094860467 +0800
@@ -65,7 +65,8 @@ DECLARE_GLOBAL_DATA_PTR;
 #  define USE_EEPROM	0
 # endif
 #else
-# define USE_EEPROM	1
+//# define USE_EEPROM	1
+# define USE_EEPROM	0
 #endif
 
 /**
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/board/octeon/common/octeon_board_phy.c OCTEON-SDK.wm/bootloader/u-boot/board/octeon/common/octeon_board_phy.c
--- OCTEON-SDK.orig/bootloader/u-boot/board/octeon/common/octeon_board_phy.c	2017-02-20 20:52:16.634567856 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/board/octeon/common/octeon_board_phy.c	2017-02-20 20:56:22.095860469 +0800
@@ -237,6 +237,7 @@ const char const *marvell_devices[] = {
 	"marvell,88e1240",
 	"marvell,88e1510",
 	"marvell,88e1512",
+	"marvell,88e1548",
 	"marvell,88e1518",
 	"marvell,88e1680",
 	"marvell,88x3120",
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/board/octeon/generic_spi_stage2/generic_spi_stage2_board.c OCTEON-SDK.wm/bootloader/u-boot/board/octeon/generic_spi_stage2/generic_spi_stage2_board.c
--- OCTEON-SDK.orig/bootloader/u-boot/board/octeon/generic_spi_stage2/generic_spi_stage2_board.c	2015-11-21 09:47:41.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/board/octeon/generic_spi_stage2/generic_spi_stage2_board.c	2017-02-20 20:56:22.112860489 +0800
@@ -40,7 +40,7 @@ int early_board_init(void)
 	} else {
 		for (i = 0; i < ARRAY_SIZE(tuple_addresses); i++) {
 			gd->arch.tlv_addr = tuple_addresses[i];
-			octeon_board_get_descriptor(CVMX_BOARD_TYPE_GENERIC,
+			octeon_board_get_descriptor(CVMX_BOARD_TYPE_SFF7000,
 						    1, 0);
 			if (gd->board_type != CVMX_BOARD_TYPE_GENERIC) {
 				debug("%s: found TLV EEPROM at address 0x%x\n",
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/board/octeon/sff7000/sff7000.dts OCTEON-SDK.wm/bootloader/u-boot/board/octeon/sff7000/sff7000.dts
--- OCTEON-SDK.orig/bootloader/u-boot/board/octeon/sff7000/sff7000.dts	2017-02-20 20:52:16.815568072 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/board/octeon/sff7000/sff7000.dts	2017-02-20 20:56:22.112860489 +0800
@@ -215,31 +215,6 @@
 				cavium,ale-mode  = <1>;
 			};
 
-			flash0: nor@0,0 {
-				compatible = "cfi-flash";
-				reg = <0 0 0x800000>;
-				#address-cells = <1>;
-				#size-cells = <1>;
-
-				partition@0 {
-					label = "bootloader";
-					reg = <0 0x280000>;
-					read-only;
-				};
-				partition@280000 {
-					label = "kernel";
-					reg = <0x280000 0x200000>;
-				};
-				partition@480000 {
-					label = "cramfs";
-					reg = <0x480000 0x370000>;
-				};
-				partition@7f0000 {
-					label = "environment";
-					reg = <0x7f0000 0x10000>;
-					read-only;
-				};
-			};
 		};
 
 		smi0: mdio@1180000001800 {
@@ -250,94 +225,51 @@
 
 			phy0: ethernet-phy@0 {
 				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <0>;
+				compatible = "marvell,88e1548", "ethernet-phy-ieee802.3-c22";
+				reg = <28>;
 				interrupt-parent = <&gpio>;
 				interrupts = <6 8>;	/* pin 6, active low */
-				coma = <&gpio2 5 0>;	/* pin 5, not inverted */
 			};
 			phy1: ethernet-phy@1 {
 				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <1>;
+				compatible = "marvell,88e1548", "ethernet-phy-ieee802.3-c22";
+				reg = <29>;
 				interrupt-parent = <&gpio>;
 				interrupts = <6 8>;	/* pin 6, active low */
 			};
 			phy2: ethernet-phy@2 {
 				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <2>;
+				compatible = "marvell,88e1548", "ethernet-phy-ieee802.3-c22";
+				reg = <30>;
 				interrupt-parent = <&gpio>;
 				interrupts = <6 8>;	/* pin 6, active low */
 			};
 			phy3: ethernet-phy@3 {
 				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <3>;
+				compatible = "marvell,88e1548", "ethernet-phy-ieee802.3-c22";
+				reg = <31>;
 				interrupt-parent = <&gpio>;
 				interrupts = <6 8>;	/* pin 6, active low */
 			};
 			phy4: ethernet-phy@4 {
-				compatible = "marvell,88e1118";
-				reg = <4>;
-				marvell,reg-init =
+				compatible = "marvell,88e1512", "ethernet-phy-ieee802.3-c22";
+				reg = <0>;
+				/*marvell,reg-init =*/
 					/* Automatic MDI/MDIX */
 					/*<0 0x10 0xff9f 0x0060>,*/
 					/* Fix rx and tx clock transition timing */
-					<2 0x15 0xffcf 0x0>, /* Reg 2,21 Clear bits 4, 5 */
+					/*<2 0x15 0xffcf 0x0>,*/ /* Reg 2,21 Clear bits 4, 5 */
 					/* Adjust LED drive. */
 					/*<3 0x11 0 0x442a>,*/ /* Reg 3,17 <- 0442a */
 					/* irq, blink-activity, blink-link */
 					/*<3 0x10 0 0x0242>,*/ /* Reg 3,16 <- 0x0242 */
-					<0 0x0 0x7fff 0x8000>;  /* soft reset so mdix setting takes effect */
+					/*<0 0x0 0xfebf 0x0140>, *//* */
+					/*<0 0x0 0x7fff 0x8000>; *//* soft reset so mdix setting takes effect */
 				interrupt-parent = <&gpio>;
 				interrupts = <7 8>;	/* pin 4, active low */
 			};
 		};
 
-		smi1: mdio@1180000001900 {
-			compatible = "cavium,octeon-3860-mdio";
-			#address-cells = <1>;
-			#size-cells = <0>;
-			reg = <0x11800 0x00001900 0x0 0x40>;
-			phy8: ethernet-phy@8 {
-				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <4>;
-				interrupt-parent = <&gpio>;
-				interrupts = <6 8>;	/* pin 6, active low */
-				coma = <&gpio2 6 0>;	/* pin 6, not inverted */
-			};
-			phy9: ethernet-phy@9 {
-				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <5>;
-				interrupt-parent = <&gpio>;
-				interrupts = <6 8>;	/* pin 6, active low */
-			};
-			phy10: ethernet-phy@10 {
-				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <6>;
-				interrupt-parent = <&gpio>;
-				interrupts = <6 8>;	/* pin 6, active low */
-			};
-			phy11: ethernet-phy@11 {
-				cavium,qlm-trim = "0,qsgmii";
-				compatible = "vitesse,vsc8574", "ethernet-phy-ieee802.3-c22";
-				reg = <7>;
-				interrupt-parent = <&gpio>;
-				interrupts = <6 8>;	/* pin 6, active low */
-			};
-			phy16: ethernet-phy@16 {
-				cavium,qlm-trim = "0,xaui";
-				compatible = "marvell,88x3140", "ethernet-phy-ieee802.3-c45";
-				reg = <0x10>;
-				interrupt-parent = <&gpio>;
-				interrupts = <5 0>;	/* pin 5, active low */
-			};
-		};
-
 		pip: pip@11800a0000000 {
 			compatible = "cavium,octeon-3860-pip";
 			#address-cells = <1>;
@@ -376,54 +308,6 @@
 					phy-handle = <&phy3>;
 				};
 			};
-			interface@Q2 {
-				cavium,qlm-trim = "0,qsgmii";
-				compatible = "cavium,octeon-3860-pip-interface";
-				#address-cells = <1>;
-				#size-cells = <0>;
-				reg = <1>; /* interface */
-
-
-				ethernet@0 {
-					compatible = "cavium,octeon-3860-pip-port";
-					reg = <0x0>;  /* Port */
-					local-mac-address = [ 00 00 00 00 00 00 ];
-					phy-handle = <&phy8>;
-				};
-				ethernet@1 {
-					compatible = "cavium,octeon-3860-pip-port";
-					reg = <0x1>;  /* Port */
-					local-mac-address = [ 00 00 00 00 00 00 ];
-					phy-handle = <&phy9>;
-				};
-				ethernet@2 {
-					compatible = "cavium,octeon-3860-pip-port";
-					reg = <0x2>;
-					local-mac-address = [ 00 00 00 00 00 00 ];
-					phy-handle = <&phy10>;
-				};
-				ethernet@3 {
-					compatible = "cavium,octeon-3860-pip-port";
-					reg = <0x3>;
-					local-mac-address = [ 00 00 00 00 00 00 ];
-					phy-handle = <&phy11>;
-				};
-			};
-
-			interface@X {
-				cavium,qlm-trim = "0,xaui";
-				compatible = "cavium,octeon-3860-pip-interface";
-				#address-cells = <1>;
-				#size-cells = <0>;
-				reg = <0>; /* interface */
-
-				ethernet@0 {
-					compatible = "cavium,octeon-3860-pip-port";
-					reg = <0x0>; /* Port */
-					local-mac-address = [ 00 00 00 00 00 00 ];
-					phy-handle = <&phy16>;
-				};
-			};
 
 			interface@4 {
 				compatible = "cavium,octeon-3860-pip-interface";
@@ -519,36 +403,6 @@
 			reg = <0x11800 0x00001000 0x0 0x200>;
 			interrupts = <0 45>;
 			clock-frequency = <100000>;
-
-			tmp@2c {
-				compatible = "analogdevices,adm1031";
-				reg = <0x2c>;
-				interrupt-parent = <&gpio>;
-				interrupts = <12 8>, <13 8>, <16 8>;
-			};
-			tlv-eeprom@54 {
-				compatible = "atmel,24c256";
-				reg = <0x54>;
-				pagesize = <64>;
-			};
-			rtc@68 {
-				compatible = "dallas,ds1337";
-				reg = <0x68>;
-				interrupt-parent = <&gpio>;
-				interrupts = <17 8>;
-			};
-			gpio1: gpio@20 {
-				compatible = "nxp,pca9534";
-				reg = <0x20>;
-				#gpio-cells = <2>;
-				gpio-controller;
-			};
-			gpio2: gpio@21 {
-				compatible = "nxp,pca9534";
-				reg = <0x21>;
-				#gpio-cells = <2>;
-				gpio-controller;
-			};
 		};
 
 		twsi1: i2c@1180000001200 {
@@ -666,6 +520,8 @@
 				reg = <2>;
 				/* soft_bch is used to support multi-bit ECC */
 				nand-ecc-mode = "hw_syndrome";
+				/*nand-ecc-mode = "soft";*/
+				/*nand-ecc-mode = "none";*/
 
 				/* Number of bytes of data to perform ECC over */
 				nand-ecc-size = <512>;
@@ -708,12 +564,10 @@
 	aliases {
 		pip = &pip;
 		smi0 = &smi0;
-		smi1 = &smi1;
 		twsi0 = &twsi0;
 		twsi1 = &twsi1;
 		uart0 = &uart0;
 		uart1 = &uart1;
-		flash0 = &flash0;
 		emmc = &mmc;
 		spi = &spi;
 		sata = &sata;
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/common/cmd_nand.c OCTEON-SDK.wm/bootloader/u-boot/common/cmd_nand.c
--- OCTEON-SDK.orig/bootloader/u-boot/common/cmd_nand.c	2015-11-21 09:47:22.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/common/cmd_nand.c	2017-02-20 20:56:22.120860498 +0800
@@ -399,6 +399,11 @@ static void nand_print_and_set_info(int
 	printf("  OOB size   %8d b\n", nand->oobsize);
 	printf("  Erase size %8d b\n", nand->erasesize);
 
+	printf("  ecc.mode %8d \n", chip->ecc.mode);
+	printf("  ecc.bytes %8d b\n", chip->ecc.bytes);
+	printf("  ecc.size %8d b\n", chip->ecc.size);
+	printf("  ecc.strength %8d \n", chip->ecc.strength);
+
 	/* Set geometry info */
 	setenv_hex("nand_writesize", nand->writesize);
 	setenv_hex("nand_oobsize", nand->oobsize);
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/drivers/gpio/pca953x.c OCTEON-SDK.wm/bootloader/u-boot/drivers/gpio/pca953x.c
--- OCTEON-SDK.orig/bootloader/u-boot/drivers/gpio/pca953x.c	2015-11-21 09:47:33.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/drivers/gpio/pca953x.c	2017-02-20 20:56:22.135860516 +0800
@@ -158,11 +158,18 @@ int pca953x_set_dir(uint8_t bus, uint8_t
  */
 int pca953x_get_val(uint8_t bus, uint8_t chip)
 {
-	uint val;
-
-	if (pca953x_reg_read(bus, chip, PCA953X_IN, &val) < 0)
-		return -1;
+	uint val = (int)-1;
 
+	if (pca953x_reg_read(bus, chip, PCA953X_IN, &val) < 0){
+#ifdef WMBOARD		
+		if((bus == 0)&&(chip == 0x20)){
+			val = 0;
+		}
+#endif
+		debug("pca bus 0x%x chip 0x%x = 0x%x\n", bus, chip, val);
+		return (int)val;
+	}
+	debug("pca bus 0x%x chip 0x%x = 0x%x\n", bus, chip, val);
 	return (int)val;
 }
 
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/drivers/mtd/nand/nand_base.c OCTEON-SDK.wm/bootloader/u-boot/drivers/mtd/nand/nand_base.c
--- OCTEON-SDK.orig/bootloader/u-boot/drivers/mtd/nand/nand_base.c	2015-11-21 09:47:30.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/drivers/mtd/nand/nand_base.c	2017-02-20 20:56:22.143860526 +0800
@@ -31,7 +31,7 @@
  * published by the Free Software Foundation.
  *
  */
-
+//#define WM_DEBUG 1
 #include <common.h>
 
 #define ENOTSUPP	524	/* Operation is not supported */
@@ -517,7 +517,11 @@ static int nand_block_checkbad(struct mt
 
 	if (!chip->bbt)
 		return chip->block_bad(mtd, ofs, getchip);
-
+	
+#ifdef WM_DEBUG
+	printf("[%s][%d]ofs 0x%x chip->options 0x%x, bbt %p\n", __func__, __LINE__, 
+		(int)ofs, chip->options, chip->bbt);
+#endif
 	/* Return info from the table */
 	return nand_isbad_bbt(mtd, ofs, allowbbt);
 }
@@ -910,7 +914,9 @@ static int nand_read_page_swecc(struct m
 	uint8_t *ecc_calc = chip->buffers->ecccalc;
 	uint8_t *ecc_code = chip->buffers->ecccode;
 	uint32_t *eccpos = chip->ecc.layout->eccpos;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d]oob_required 0x%x page 0x%x\n", __func__, __LINE__, oob_required, page);
+#endif
 	chip->ecc.read_page_raw(mtd, chip, buf, 1, page);
 
 	for (i = 0; eccsteps; eccsteps--, i += eccbytes, p += eccsize)
@@ -952,7 +958,9 @@ static int nand_read_subpage(struct mtd_
 	int datafrag_len, eccfrag_len, aligned_len, aligned_pos;
 	int busw = (chip->options & NAND_BUSWIDTH_16) ? 2 : 1;
 	int index = 0;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d]\n", __func__, __LINE__);
+#endif
 	/* Column address within the page aligned to ECC size (256bytes) */
 	start_step = data_offs / chip->ecc.size;
 	end_step = (data_offs + readlen - 1) / chip->ecc.size;
@@ -1259,7 +1267,9 @@ static int nand_do_read_ops(struct mtd_i
 	buf = ops->datbuf;
 	oob = ops->oobbuf;
 	oob_required = oob ? 1 : 0;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d]oob_required 0x%x\n", __func__, __LINE__, oob_required);
+#endif
 	while (1) {
 		WATCHDOG_RESET();
 
@@ -1287,6 +1297,9 @@ static int nand_do_read_ops(struct mtd_i
 			else
 				ret = chip->ecc.read_page(mtd, chip, bufpoi,
 							  oob_required, page);
+#ifdef WM_DEBUG
+			printf("[%s][%d]ret 0x%x\n", __func__, __LINE__, ret);
+#endif			
 			if (ret < 0) {
 				if (!aligned)
 					/* Invalidate page cache */
@@ -1350,7 +1363,9 @@ static int nand_do_read_ops(struct mtd_i
 	ops->retlen = ops->len - (size_t) readlen;
 	if (oob)
 		ops->oobretlen = ops->ooblen - oobreadlen;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d]ret 0x%x\n", __func__, __LINE__, ret);
+#endif
 	if (ret)
 		return ret;
 
@@ -1376,7 +1391,9 @@ static int nand_read(struct mtd_info *mt
 	struct nand_chip *chip = mtd->priv;
 	struct mtd_oob_ops ops;
 	int ret;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d]from 0x%x, len 0x%x\n", __func__, __LINE__, (unsigned int)from, (unsigned int)len);
+#endif
 	nand_get_device(chip, mtd, FL_READING);
 	ops.len = len;
 	ops.datbuf = buf;
@@ -1671,6 +1688,14 @@ out:
 static int nand_write_page_raw(struct mtd_info *mtd, struct nand_chip *chip,
 				const uint8_t *buf, int oob_required)
 {
+#ifdef WM_DEBUG
+	printf("[%s][%d] mtd->writesize 0x%x mtd->oobsize 0x%x \n", __func__, __LINE__,	
+		mtd->writesize, mtd->oobsize);
+
+	print_buffer(0, chip->oob_poi, 1, mtd->oobsize, 0);
+	printf("[%s][%d]\n", __func__, __LINE__);
+
+#endif
 	chip->write_buf(mtd, buf, mtd->writesize);
 	if (oob_required)
 		chip->write_buf(mtd, chip->oob_poi, mtd->oobsize);
@@ -1736,10 +1761,25 @@ static int nand_write_page_swecc(struct
 	uint8_t *ecc_calc = chip->buffers->ecccalc;
 	const uint8_t *p = buf;
 	uint32_t *eccpos = chip->ecc.layout->eccpos;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d] oob_required 0x%x eccsize 0x%x,eccbytes 0x%x,eccsteps 0x%x, ecc.total %d\n", __func__, __LINE__,	
+		oob_required, eccsize,eccbytes,eccsteps,  chip->ecc.total);
+	printf("[%s][%d] chip->ecc.layout %p\n", __func__, __LINE__,	
+		chip->ecc.layout);
+#endif
 	/* Software ECC calculation */
-	for (i = 0; eccsteps; eccsteps--, i += eccbytes, p += eccsize)
+#ifdef WM_DEBUG
+	printf("[%s][%d]ecc_calc: ", __func__, __LINE__);
+#endif
+	for (i = 0; eccsteps; eccsteps--, i += eccbytes, p += eccsize){
 		chip->ecc.calculate(mtd, p, &ecc_calc[i]);
+#ifdef WM_DEBUG
+		printf(" 0x%x 0x%x 0x%x ", ecc_calc[i], ecc_calc[i+1], ecc_calc[i+2]);
+#endif		
+	}
+#ifdef WM_DEBUG
+	printf("\n");
+#endif
 
 	for (i = 0; i < chip->ecc.total; i++)
 		chip->oob_poi[eccpos[i]] = ecc_calc[i];
@@ -1763,7 +1803,10 @@ static int nand_write_page_hwecc(struct
 	uint8_t *ecc_calc = chip->buffers->ecccalc;
 	const uint8_t *p = buf;
 	uint32_t *eccpos = chip->ecc.layout->eccpos;
-
+#ifdef WM_DEBUG
+	printf("[%s][%d] oob_required 0x%x eccsize 0x%x,eccbytes 0x%x,eccsteps 0x%x, ecc.total %d\n", __func__, __LINE__,	
+		oob_required, eccsize,eccbytes,eccsteps,  chip->ecc.total);
+#endif
 	for (i = 0; eccsteps; eccsteps--, i += eccbytes, p += eccsize) {
 		chip->ecc.hwctl(mtd, NAND_ECC_WRITE);
 		chip->write_buf(mtd, p, eccsize);
@@ -1798,6 +1841,11 @@ static int nand_write_page_syndrome(stru
 	const uint8_t *p = buf;
 	uint8_t *oob = chip->oob_poi;
 
+#ifdef WM_DEBUG
+	printf("[%s][%d] oob_required 0x%x eccsize 0x%x,eccbytes 0x%x,eccsteps 0x%x, ecc.total %d\n", __func__, __LINE__,	
+		oob_required, eccsize,eccbytes,eccsteps,  chip->ecc.total);
+#endif
+
 	for (i = 0; eccsteps; eccsteps--, i += eccbytes, p += eccsize) {
 
 		chip->ecc.hwctl(mtd, NAND_ECC_WRITE);
@@ -1841,7 +1889,10 @@ static int nand_write_page(struct mtd_in
 			   int cached, int raw)
 {
 	int status;
-
+	
+#ifdef WM_DEBUG
+	printf("[%s][%d] oob_required 0x%x raw %d\n", __func__, __LINE__,	oob_required, raw);
+#endif
 	chip->cmdfunc(mtd, NAND_CMD_SEQIN, 0x00, page);
 
 	if (unlikely(raw))
@@ -2003,7 +2054,10 @@ static int nand_do_write_ops(struct mtd_
 	/* Don't allow multipage oob writes with offset */
 	if (oob && ops->ooboffs && (ops->ooboffs + ops->ooblen > oobmaxlen))
 		return -EINVAL;
-
+	
+#ifdef WM_DEBUG
+	printf("[%s][%d] oob_required 0x%x, ecc.bytes 0x%x\n", __func__, __LINE__,	oob_required, chip->ecc.bytes);
+#endif
 	while (1) {
 		WATCHDOG_RESET();
 
@@ -3232,7 +3286,13 @@ int nand_scan_tail(struct mtd_info *mtd)
 				   mtd->oobsize);
 		}
 	}
-
+	
+#ifdef WM_DEBUG
+	printf("[%s][%d] oobsize 0x%x chip->write_page %p \n"
+		" chip->bbt_options 0x%x chip->ecc.layout %p, chip->ecc.mode %d, ecc.bytes 0x%x\n", __func__, __LINE__, 
+			mtd->oobsize, chip->write_page, 
+			chip->bbt_options, chip->ecc.layout, chip->ecc.mode, chip->ecc.bytes);
+#endif
 	if (!chip->write_page)
 		chip->write_page = nand_write_page;
 
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/drivers/mtd/nand/octeon_nand.c OCTEON-SDK.wm/bootloader/u-boot/drivers/mtd/nand/octeon_nand.c
--- OCTEON-SDK.orig/bootloader/u-boot/drivers/mtd/nand/octeon_nand.c	2017-02-20 20:52:16.883568153 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/drivers/mtd/nand/octeon_nand.c	2017-02-20 20:56:22.144860527 +0800
@@ -36,7 +36,12 @@
  * marketing@cavium.com
  *
  ***********************license end**************************************/
-
+//#define WM_DEBUG
+#ifdef WM_DEBUG
+#define WM_printf printf
+#else 
+#define WM_printf(format, args...) 
+#endif
 #include <common.h>
 #include <asm/arch/cvmx.h>
 #include <nand.h>
@@ -172,7 +177,7 @@ void octeon_write_buf(struct mtd_info *m
 	WATCHDOG_RESET();
 	debug("%s: len: %d, index: %d, total length: %d\n",
 	      __func__, len, priv->index, priv->data_len);
-#ifdef DEBUG
+#ifdef WM_DEBUG
 	print_buffer(0, buf, 1, len, 0);
 #endif
 	memcpy(priv->data + priv->index, buf, len);
@@ -189,7 +194,10 @@ void octeon_read_buf(struct mtd_info *mt
 {
 	struct nand_chip *nand = mtd->priv;
 	struct octeon_nand_priv *priv = nand->priv;
-
+	
+#ifdef WM_DEBUG
+	printf("[%s][%d]\n", __func__, __LINE__);
+#endif
 	debug("%s len: %d, index: %d, total length: %d\n",
 	      __func__, len, priv->index, priv->data_len);
 
@@ -505,7 +513,7 @@ static int octeon_nand_calc_ecc_layout(s
 	}
 	memset(layout, 0, sizeof(*layout));
 	layout->eccbytes = chip->ecc.steps * chip->ecc.bytes;
-	debug("  oob size: %d, eccbytes: %u, steps: %u, bytes: %u\n", oobsize,
+	WM_printf("  oob size: %d, eccbytes: %u, steps: %u, bytes: %u\n", oobsize,
 	      layout->eccbytes, chip->ecc.steps, chip->ecc.bytes);
 	/* Reserve 2 bytes for bad block marker */
 	if (layout->eccbytes + 2 > oobsize) {
@@ -518,7 +526,7 @@ static int octeon_nand_calc_ecc_layout(s
 	for (i = 0; i < layout->eccbytes; i++)
 		layout->eccpos[i] = oobsize - layout->eccbytes + i;
 
-#ifdef DEBUG
+#ifdef WM_DEBUG
 	debug("ECC layout:\n");
 	print_buffer(0, layout->eccpos, 4, layout->eccbytes, 0);
 #endif
@@ -527,7 +535,7 @@ static int octeon_nand_calc_ecc_layout(s
 	chip->ecc.layout = layout;
 	priv->ecclayout = layout;
 
-	debug("  layout eccbytes: %d, free offset: %d, free length: %d\n",
+	WM_printf("  layout eccbytes: %d, free offset: %d, free length: %d\n",
 	      layout->eccbytes, layout->oobfree[0].offset,
 	      layout->oobfree[0].length);
 	return 0;
@@ -714,17 +722,23 @@ static int octeon_nand_hw_bch_write_page
 	uint8_t *ecc_calc = chip->buffers->ecccalc;
 
 	debug("%s(%p, %p, %p, %d)\n", __func__, mtd, chip, buf, oob_required);
-
+#ifdef WM_DEBUG
+	printf("[%s][%d] oob_required 0x%x eccsize 0x%x,eccbytes 0x%x,eccsteps 0x%x, ecc.total %d\n", __func__, __LINE__,	
+		oob_required, eccsize,eccbytes,eccsteps,  chip->ecc.total);
+#endif
 	/* Hardware ECC calculation */
 	for (i = 0; eccsteps; eccsteps--, i += eccbytes, p += eccsize) {
 		chip->ecc.calculate(mtd, p, &ecc_calc[i]);
 		debug("%s: block offset %d, ecc offset %d\n", __func__,
 		      p - buf, i);
 	}
-
-	for (i = 0; i < chip->ecc.total; i++)
+	WM_printf("[%s][%d]ecc:\n",  __func__, __LINE__);
+	for (i = 0; i < chip->ecc.total; i++){
+		WM_printf("[%d]0x%x ", eccpos[i], ecc_calc[i]);
 		chip->oob_poi[eccpos[i]] = ecc_calc[i];
-
+	}
+	WM_printf("\n");
+	
 #ifdef DEBUG
 	debug("oob:\n");
 	print_buffer(0, chip->oob_poi, 1, mtd->oobsize, 0);
@@ -958,10 +972,14 @@ void octeon_cmdfunc(struct mtd_info *mtd
 
 	case NAND_CMD_PAGEPROG:
 		cmdprint("cmdfunc: PAGEPROG (page=0x%x)\n", priv->selected_page);
+#ifdef WM_DEBUG
+		printf("[%s][%d]priv->selected_page 0x%x nand->page_shift 0x%x\n", __func__, __LINE__, 
+			priv->selected_page, nand->page_shift);
+#endif		
 #ifdef DEBUG
 		print_buffer(priv->selected_page << nand->page_shift, priv->data,
 			     1, 1 << nand->page_shift, 0);
-		debug("OOB: (%d bytes)\n", mtd->oobsize);
+		printf("OOB: (%d bytes)\n", mtd->oobsize);
 		print_buffer(0, priv->data + (1 << nand->page_shift), 1,
 			     mtd->oobsize, 0);
 #endif
@@ -1222,6 +1240,59 @@ int octeon_scan_bbt(struct mtd_info *mtd
  *
  * @return 0 for success, -1 on error
  */
+
+int wmboard_adjustment(struct nand_chip *chip)
+{
+	struct octeon_nand_priv *priv = (struct octeon_nand_priv *)chip->priv;
+
+	chip->page_shift = ffs(4096) - 1; //4096bytes per page
+	chip->ecc.strength = 8;	//???
+	//chip->ecc.strength =
+	//			(chip->ecc.bytes * 8) / fls(8 * chip->ecc.size);
+	if (octeon_has_feature(OCTEON_FEATURE_BCH)) {
+			debug("Using hardware ECC syndrome support\n");
+			chip->ecc.mode = NAND_ECC_HW_SYNDROME;
+			//chip->ecc.strength = chip->onfi_params.ecc_bits;
+			chip->ecc.read_page = octeon_nand_hw_bch_read_page;
+			chip->ecc.write_page = octeon_nand_hw_bch_write_page;
+			chip->ecc.read_page_raw = octeon_nand_read_page_raw;
+			chip->ecc.write_page_raw = octeon_nand_write_page_raw;
+			chip->ecc.read_oob = octeon_nand_read_oob_std;
+			chip->ecc.write_oob = octeon_nand_write_oob_std;
+
+			chip->ecc.size = 512;
+
+
+			/* The number of ECC bits required is m * t
+			 * where (2^m) - 1 > bits per ecc block and
+			 * t is the number of correctible bits.  So if
+			 * a block is 512 bytes and 4 bits of ECC are
+			 * to be supported then m = 13 since
+			 * (2^13) - 1 > (512 * 8).  This requires a
+			 * total of 52 bits.  Rounding up this is 7
+			 * bytes.
+			 *
+			 * OCTEON is hard coded for m=15.
+			 * OCTEON requires ((15 * t) + 7) / 8
+			 */
+			chip->ecc.bytes = ((15 * chip->ecc.strength) + 7) / 8;
+			if (!chip->ecc.strength)
+				chip->ecc.strength =
+					(chip->ecc.bytes * 8) / fls(8 * chip->ecc.size);
+			chip->ecc.calculate = octeon_nand_bch_calculate_ecc;
+			chip->ecc.steps = (1 << chip->page_shift) / chip->ecc.size;
+			chip->ecc.calculate = octeon_nand_bch_calculate_ecc;
+			chip->ecc.correct = octeon_nand_bch_correct;
+			chip->ecc.hwctl = octeon_nand_bch_hwecc_ctl;
+			debug("NAND chip %d using hw_bch ECC for %d bits of correction per %d byte block.  ECC size is %d bytes\n",
+			      priv->selected_chip,
+			      chip->ecc.strength,
+			      chip->ecc.size,
+			      chip->ecc.bytes);
+		}
+	return 0;
+}
+
 static int octeon_nand_scan_onfi(struct nand_chip *chip)
 {
 #ifdef CONFIG_SYS_NAND_ONFI_DETECTION
@@ -1505,8 +1576,11 @@ int board_nand_init(struct nand_chip *ch
 	chip->ecc.bytes = CONFIG_OCTEON_NAND_ECC_BYTES;
 #endif
 
-	octeon_nand_scan_onfi(chip);
-
+	octeon_nand_scan_onfi(chip);	
+	wmboard_adjustment(chip);
+	WM_printf("[%s][%d] chip->ecc.strength 0x%x\n", __func__, __LINE__, 
+			chip->ecc.strength);
+	
 #ifdef CONFIG_OF_LIBFDT
 	offset = fdt_path_offset(gd->fdt_blob, "/soc/nand-flash-interface");
 	if ((offset >= 0) &&
@@ -1574,6 +1648,10 @@ int board_nand_init(struct nand_chip *ch
 		}
 	}
 
+#ifdef WM_DEBUG
+	printf("[%s][%d] chip->ecc.mode 0x%x ecc.bytes 0x%x ecc.size 0x%x, strength %d\n", __func__, __LINE__, 
+			chip->ecc.mode, chip->ecc.bytes, chip->ecc.size, chip->ecc.strength);
+#endif
 	/* Move on to next chip on next invocation */
 	cur_chip_select++;
 	return 0;
@@ -1591,13 +1669,20 @@ int oct_nand_probe(void)
 	int active_nand_mask;
 	int chip = -1;
 	int debug_flag;
+	char *eptr=NULL;
 
 	/* Detect NAND flash */
 	WATCHDOG_RESET();
 	debug("%s: Calling cvmx_nand_initialize()\n", __func__);
 
-	if (getenv("octeon_debug_nand")) {
-		debug_flag = CVMX_NAND_INITIALIZE_FLAGS_DEBUG;
+	eptr=getenv("octeon_debug_nand");
+	if (eptr) {
+		if (!strcmp("info", eptr))
+		{
+			debug_flag = CVMX_NAND_INITIALIZE_FLAGS_INFO;
+		}else{
+			debug_flag = CVMX_NAND_INITIALIZE_FLAGS_DEBUG;
+		}
 		printf("OCTEON NAND debugging enabled.\n");
 	} else {
 #ifdef DEBUG
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/drivers/net/phy/marvell.c OCTEON-SDK.wm/bootloader/u-boot/drivers/net/phy/marvell.c
--- OCTEON-SDK.orig/bootloader/u-boot/drivers/net/phy/marvell.c	2017-02-20 20:52:16.983568272 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/drivers/net/phy/marvell.c	2017-02-20 20:57:29.339023955 +0800
@@ -299,34 +299,108 @@ void m88e1518_phy_writebits(struct phy_d
 
 static int m88e1518_config(struct phy_device *phydev)
 {
-	/*
-	 * As per Marvell Release Notes - Alaska 88E1510/88E1518/88E1512
-	 * /88E1514 Rev A0, Errata Section 3.1
-	 */
-	if (phydev->interface == PHY_INTERFACE_MODE_SGMII) {
-		phy_write(phydev, MDIO_DEVAD_NONE, 22, 0x00ff);	/* page 0xff */
-		phy_write(phydev, MDIO_DEVAD_NONE, 17, 0x214B);
-		phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x2144);
-		phy_write(phydev, MDIO_DEVAD_NONE, 17, 0x0C28);
-		phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x2146);
-		phy_write(phydev, MDIO_DEVAD_NONE, 17, 0xB233);
-		phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x214D);
-		phy_write(phydev, MDIO_DEVAD_NONE, 17, 0xCC0C);
-		phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x2159);
-		phy_write(phydev, MDIO_DEVAD_NONE, 22, 0x0000);	/* reg page 0 */
-
-
-		phy_write(phydev, MDIO_DEVAD_NONE, 22, 18);    /* reg page 18 */
-		/* Write HWCFG_MODE = SGMII to Copper */
-		m88e1518_phy_writebits(phydev, 20, 0, 3, 1);
-
-		/* Phy reset */
-		m88e1518_phy_writebits(phydev, 20, 15, 1, 1);
-		phy_write(phydev, MDIO_DEVAD_NONE, 22, 0);     /* reg page 18 */
-		udelay(100);
+	int ret = 0;
+	int reg;
+
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 2);
+		
+	reg = phy_read(phydev,MDIO_DEVAD_NONE, MIIM_88E1xxx_PHY_SCR);
+	reg |= (1<<6);
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1xxx_PHY_SCR, reg);
+		
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0);
+
+	
+#define MII_88E1121_PHY_MSCR_REG	21
+#define MII_88E1121_PHY_MSCR_DELAY_MASK	(~(0x3 << 4))
+#define MII_88E1121_PHY_MSCR_RX_DELAY	(1<<5)
+#define MII_88E1121_PHY_MSCR_TX_DELAY	(1<<4)
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 2);
+	reg = phy_read(phydev, MDIO_DEVAD_NONE, MII_88E1121_PHY_MSCR_REG) &
+			MII_88E1121_PHY_MSCR_DELAY_MASK;
+	phy_write(phydev, MDIO_DEVAD_NONE, MII_88E1121_PHY_MSCR_REG, reg);
+
+	
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0);
+	phy_reset(phydev);
+#define MII_M1011_PHY_SCR		0x10
+#define MII_M1011_PHY_SCR_AUTO_CROSS	0x0060	
+	phy_write(phydev, MDIO_DEVAD_NONE, MII_M1011_PHY_SCR,MII_M1011_PHY_SCR_AUTO_CROSS);
+
+
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, MIIM_88E1118_PHY_LED_PAGE);
+	phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x30);
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0);
+
+	genphy_config_aneg(phydev);
+	return ret;
+}
+
+static int m88e1548_config(struct phy_device *phydev)
+{
+	int ret = 0;
+	int reg;
+	
+	debug("[%s %d] %d 0x%x addr 0x%x\n", __func__, __LINE__, 
+		phydev->interface, phydev->phy_id, phydev->addr);
+
+	if (phydev->interface == PHY_INTERFACE_MODE_QSGMII) {
+		/* Enable QSGMII AN */
+		/* Set page to 4 */
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x16, 4);
+		/* Enable AN */
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x0, 0x1140);
+		/* Set page to 0 */
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x16, 0);
+
+		/* Adjust LED control */
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x16, 3);
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x10, 0x100);
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x16, 0);
+		
+		/* Phy C_ANEG */
+		reg = phy_read(phydev, MDIO_DEVAD_NONE, 0x4);
+		reg |= 0x1E0;
+		phy_write(phydev, MDIO_DEVAD_NONE, 0x4, reg);
+
+		/* Soft-Reset */
+		phy_write(phydev, MDIO_DEVAD_NONE, 22, 0x0000);
+		phy_write(phydev, MDIO_DEVAD_NONE, 0, 0x9140);
+
+#define ETH_PHY_CTRL_REG		0
+#define ETH_PHY_CTRL_POWER_DOWN_BIT	11
+#define ETH_PHY_CTRL_POWER_DOWN_MASK	(1 << ETH_PHY_CTRL_POWER_DOWN_BIT)
+		/* Power up the phy */
+		reg = phy_read(phydev, MDIO_DEVAD_NONE, ETH_PHY_CTRL_REG);
+		reg &= ~(ETH_PHY_CTRL_POWER_DOWN_MASK);
+		phy_write(phydev, MDIO_DEVAD_NONE, ETH_PHY_CTRL_REG, reg);
+
+		debug("88E1545 Initialized\n");
+#ifdef DEBUG
+		//using "mdio read octeth0 0-27 " instead. 
+		//dump_m88e1548_config(phydev);
+#endif
+		return 0;
+
 	}
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 2);
+	reg = phy_read(phydev,MDIO_DEVAD_NONE, MIIM_88E1xxx_PHY_SCR);
+	reg |= (1<<6);
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1xxx_PHY_SCR, reg);
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0);
+
+	phy_reset(phydev);
+	
+#define MII_M1011_PHY_SCR		0x10
+#define MII_M1011_PHY_SCR_AUTO_CROSS	0x0060	
+	phy_write(phydev, MDIO_DEVAD_NONE, MII_M1011_PHY_SCR,MII_M1011_PHY_SCR_AUTO_CROSS);
+
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, MIIM_88E1118_PHY_LED_PAGE);
+	phy_write(phydev, MDIO_DEVAD_NONE, 16, 0x30);
+	phy_write(phydev, MDIO_DEVAD_NONE, MIIM_88E1118_PHY_PAGE, 0);
 
-	return m88e1111s_config(phydev);
+	genphy_config_aneg(phydev);
+	return 0;
 }
 
 /* Marvell 88E1118 */
@@ -655,6 +729,16 @@ static struct phy_driver M88E1518_driver
 	.shutdown = &genphy_shutdown,
 };
 
+static struct phy_driver M88E1548_driver = {
+	.name = "Marvell 88E15480",
+	.uid = 0x01410ea0,
+	.mask = 0xffffff0,
+	.features = PHY_GBIT_FEATURES,
+	.config = &m88e1548_config,
+	.startup = &genphy_startup,
+	.shutdown = &genphy_shutdown,
+};
+
 static struct phy_driver M88E1310_driver = {
 	.name = "Marvell 88E1310",
 	.uid = 0x01410e90,
@@ -698,6 +782,7 @@ int phy_marvell_init(void)
 	phy_register(&M88E1111S_driver);
 	phy_register(&M88E1011S_driver);
 	phy_register(&M88E1518_driver);
+	phy_register(&M88E1548_driver);
 	phy_register(&M88E1680_driver);
 #ifdef CONFIG_PHYLIB_10G
 	phy_register(&M88X3120_driver);
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_common_spi_stage2.h OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_common_spi_stage2.h
--- OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_common_spi_stage2.h	2015-11-21 09:47:22.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_common_spi_stage2.h	2017-02-20 20:56:22.151860535 +0800
@@ -350,6 +350,7 @@
 #define CONFIG_SPI			/** Enable SPI support		*/
 #define CONFIG_SPI_FLASH		/** Enable SPI flash driver	*/
 #define CONFIG_SPI_FLASH_STMICRO	/** Enable ST Micro SPI flash	*/
+#define CONFIG_SPI_FLASH_WINBOND
 #define CONFIG_CMD_SPI			/** Enable SPI command		*/
 #define CONFIG_CMD_SF			/** Enable SPI flash command	*/
 #define CONFIG_SPI_M95XXX		/** M95256 SPI NOR		*/
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_generic_spi_stage2.h OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_generic_spi_stage2.h
--- OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_generic_spi_stage2.h	2015-11-21 09:47:22.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_generic_spi_stage2.h	2017-02-20 20:56:22.156860541 +0800
@@ -59,7 +59,7 @@
  * on an erase block boundary.  It should be large enough to be able to handle
  * at least one bad block.
  */
-#define CONFIG_OCTEON_SPI_BOOT_END		0x600000
+#define CONFIG_OCTEON_SPI_BOOT_END		0x400000
 
 /**
  * Address to load the stage 3 bootloader for booting
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_sff7000.h OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_sff7000.h
--- OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_sff7000.h	2017-02-20 20:52:17.115568430 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_sff7000.h	2017-02-20 20:56:22.157860543 +0800
@@ -77,17 +77,13 @@
  * variable to define the MTD partitions for u-boot.
  */
 #define MTDPARTS_DEFAULT				\
-	"octeon_nor0:2560k(bootloader)ro,"		\
-	"2m(kernel),"					\
-	"3520k(cramfs),"				\
-	"64k(environment)ro;"				\
 	"octeon_nand0:6m(bootloader)ro,"		\
 	"2m(environment),"				\
 	"8m(kernel),"					\
 	"512m(rootfs)\0"
 
 
-#define MTDIDS_DEFAULT	"nor0=octeon_nor0,nand0=octeon_nand0\0"
+#define MTDIDS_DEFAULT	"nand0=octeon_nand0\0"
 
 /**
  * Start of where the NAND bootloader images are placed.  Must be on an erase
@@ -96,7 +92,12 @@
 #define CONFIG_OCTEON_NAND_BOOT_START		0
 
 /** Maximum number of NAND devices */
+#ifdef WMBOARD
+#define CONFIG_SYS_MAX_NAND_DEVICE	1 //2//2
+#else
 #define CONFIG_SYS_MAX_NAND_DEVICE	1
+#endif
+
 #define CONFIG_SYS_NAND_FORCE_WIDTH	8	/** Force to 8-bit width */
 /** Not used for Octeon, but must be set */
 #define CONFIG_SYS_NAND_BASE		0
@@ -106,7 +107,10 @@
 /** Enable multi-bit ECC support */
 #define CONFIG_OCTEON_HW_BCH
 #include "config_octeon_nand.h"
-
+#ifdef WMBOARD
+#define CONFIG_OCTEON_NAND_ECC_SIZE 512
+#define CONFIG_OCTEON_NAND_ECC_BYTES 15
+#endif
 /**
  * End of the NAND boot partition which is searched for a bootloader.  Must be
  * on an erase block boundary.  It should be large enough to be able to handle
@@ -161,6 +165,9 @@
 #define CONFIG_CMD_FAT			/** FAT support			*/
 #define CONFIG_FAT_WRITE		/** FAT write support		*/
 
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+
 /* SPI NOR flash support */
 #define CONFIG_SF_DEFAULT_BUS		0	/** Default SPI bus	*/
 #define CONFIG_SF_DEFAULT_CS		0	/** Default SPI chip select */
@@ -169,6 +176,7 @@
 #define CONFIG_OCTEON_SPI		/** Enable OCTEON SPI driver	*/
 #define CONFIG_SPI_FLASH		/** Enable SPI flash driver	*/
 #define CONFIG_SPI_FLASH_STMICRO	/** Enable ST Micro SPI flash	*/
+#define CONFIG_SPI_FLASH_WINBOND
 #define CONFIG_CMD_SPI			/** Enable SPI command		*/
 #define CONFIG_CMD_SF			/** Enable SPI flash command	*/
 #define CONFIG_SPI_M95XXX		/** M95256 SPI NOR		*/
@@ -210,13 +218,22 @@
 #if CONFIG_RAM_RESIDENT
 # define	CONFIG_ENV_IS_NOWHERE	1
 #else
+#ifndef WMBOARD
 # define	CONFIG_ENV_IS_IN_FLASH	1
+#else
+#define    CONFIG_ENV_IS_IN_SPI_FLASH      1
+#endif
 #endif
 
+#ifndef WMBOARD
 /** Address and size of Primary Environment Sector	*/
 #define CONFIG_ENV_SIZE		(64*1024)
 #define CONFIG_ENV_ADDR		(CONFIG_SYS_FLASH_BASE + CONFIG_SYS_FLASH_SIZE - CONFIG_ENV_SIZE)
-
+#else
+# define CONFIG_ENV_SECT_SIZE		256	/** SPI NOR sector size */
+# define CONFIG_ENV_OFFSET		0x300000	/** SPI NOR environment offset */
+# define CONFIG_ENV_SIZE		(8 * 1024)	/** SPI NOR env size */
+#endif
 
 /** DCache size (not used) */
 #define CONFIG_SYS_DCACHE_SIZE		(32 * 1024)
diff -purBN --no-dereference OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_sff7000_shared.h OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_sff7000_shared.h
--- OCTEON-SDK.orig/bootloader/u-boot/include/configs/octeon_sff7000_shared.h	2015-11-21 09:47:22.000000000 +0800
+++ OCTEON-SDK.wm/bootloader/u-boot/include/configs/octeon_sff7000_shared.h	2017-02-20 20:56:22.159860545 +0800
@@ -2,14 +2,14 @@
 #define __OCTEON_SFF7000_SHARED_H__
 
 #define OCTEON_SFF7000_4GB_SPD_VALUES \
-0x92,0x11,0x0b,0x02,0x04,0x21,0x02,0x09,0x0a,0x11,0x01,0x08,0x0a,0x00,0xfe,0x00,\
-0x6e,0x78,0x6e,0x30,0x6e,0x11,0x18,0x86,0x20,0x08,0x3c,0x3c,0x00,0xf0,0x83,0x05,\
-0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
+0x92,0x11,0x0b,0x02,0x04,0x19,0x02,0x0a,0x0a,0x11,0x01,0x08,0x0a,0x00,0xfe,0x00,\
+0x6e,0x78,0x6e,0x3c,0x6e,0x11,0x18,0x86,0x20,0x08,0x3c,0x3c,0x01,0x40,0x83,0x05,\
+0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x11,0x1f,0x00,\
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
-0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x61,0xca
+0x00,0x00,0x00,0x00,0x00,0x80,0x2c,0x08,0x13,0x09,0xdc,0x95,0xd6,0x2f,0xbb,0x60
 
 
 #define OCTEON_SFF7000_4GB_DRAM_SOCKET_CONFIGURATION0 \
